{"name":"Linearone","tagline":"LinearOne is a prototype theorem prover for first-order (multiplicative, intuitionistic) linear logic.","body":"#   LinearOne\r\n\r\n:copyright: 2015 [CNRS](http://www.cnrs.fr)\r\n\r\n:copyright: 2015 Richard Moot (@RichardMoot)\r\n\r\nThis research has received financial support from the ANR CONTINT, project POLYMNIE (ANR-12-CORD-0004). \r\n\r\nLinearOne is a prototype theorem prover/parser for first-order (multiplicative, intuitionistic) linear logic. It also supports (by translation) parsing of hybrid type-logical grammars and Displacement calculus grammars.\r\n\r\nLinearOne is provided under the GNU Lesser General Public License (see the included file LICENSE for details).\r\n\r\nLinearOne is a set of SWI Prolog files, which optional graph output to LuaLaTeX (using the TikZ 3.0.0 graph drawing libraries) and proof output to LaTeX/pdfLaTeX/luaLaTeX.\r\n\r\n#  Quick start\r\n\r\n### Starting Prolog\r\n\r\nAfter downloading, enter the LinearOne directory and type.\r\n\r\n```\r\nswipl    # (or the name of SWI Prolog on your system)\r\n```\r\n\r\nThis will start SWI Prolog.\r\n\r\n### Loading the source and the grammars\r\n\r\nIn SWI Prolog, type\r\n\r\n```\r\n[mill1,d_grammar].\r\n```\r\n\r\nto load the library files and the example Displacement calculus grammar, there is a hybrid type-logical grammar available as well.\r\n\r\n```\r\n[hybrid_grammar].\r\n```\r\n\r\n### Parsing\r\n\r\nTo try one of the examples in either grammar, use\r\n\r\n```\r\ntest(1).   % (check the grammar files to see the available examples).\r\n```\r\n\r\nYou can also use\r\n\r\n```\r\nparse([john,ate,more,donuts,than,mary,bought,bagels], s).\r\n```\r\n\r\nto directly parse a sentence. Check the lexicon and experiment a bit with the grammars yourself.\r\n\r\n### Viewing the output\r\n\r\nWhen a parse is found, it is output to the file `latex_proofs.tex` and a pdf file `latex_proofs.pdf` is automatically produced. View `latex_proofs.pdf` with your favorite previewer. You will probably need to zoom in for larger proofs.\r\n\r\n# Troubleshooting\r\n\r\n\r\n### No LaTeX output is produced!\r\n\r\nMake sure that you have write permissions in the LinearOne directory and that Prolog can find your LaTeX installation. To find the location of pdflatex type the following in a shell terminal\r\n\r\n```\r\nwhere pdflatex\r\n```\r\n\r\nAdd the required path to the file `mill1.pl`. For example, the path `/usr/texbin/` is added as follows.\r\n\r\n```\r\nuser:file_search_path(path, '/usr/texbin/').\r\n```\r\n\r\nIt is also possible that LaTeX aborts with an error (verify the file `latex_proofs.tex`).\r\n\r\n### The proofs don't fit the page!\r\n\r\nThe `geometry/1` predicate in the file `latex.pl` can be modified to the desired page size. Comment out all but the desired page size (or add your own preferred page size). Zooming will be necessary!\r\n\r\n### I don't see any graph output\r\n\r\nGraph output is optional. In the file mill1.pl, comment out the line\r\n\r\n```\r\n  use_module(portray_graph_none,...)\r\n```\r\n\r\nand remove the comments from line\r\n\r\n```\r\n  use_module(portray_graph_tikz,...)\r\n```\r\n\r\nAlso make sure your LaTeX installation includes lualatex and Tikz 3.0.0 or later (that is, you need a 2014 or later LaTeX installation).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}